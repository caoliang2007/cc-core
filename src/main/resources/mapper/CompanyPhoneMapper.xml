<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cti.cc.mapper.CompanyPhoneMapper">
  <resultMap id="BaseResultMap" type="org.cti.cc.entity.CompanyPhone">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cts" jdbcType="BIGINT" property="cts" />
    <result column="uts" jdbcType="BIGINT" property="uts" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, cts, uts, company_id, phone, type, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cc_company_phone
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cc_company_phone
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.cti.cc.entity.CompanyPhone">
    insert into cc_company_phone (id, cts, uts, company_id, 
      phone, type, status
      )
    values (#{id,jdbcType=BIGINT}, #{cts,jdbcType=BIGINT}, #{uts,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{phone,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.cti.cc.entity.CompanyPhone">
    insert into cc_company_phone
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cts != null">
        cts,
      </if>
      <if test="uts != null">
        uts,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cts != null">
        #{cts,jdbcType=BIGINT},
      </if>
      <if test="uts != null">
        #{uts,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cti.cc.entity.CompanyPhone">
    update cc_company_phone
    <set>
      <if test="cts != null">
        cts = #{cts,jdbcType=BIGINT},
      </if>
      <if test="uts != null">
        uts = #{uts,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cti.cc.entity.CompanyPhone">
    update cc_company_phone
    set cts = #{cts,jdbcType=BIGINT},
      uts = #{uts,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectListByMap" parameterType="Map" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" />
    from
        cc_company_phone
    <where>
      <if test="id!=null"> id = #{id}</if>
      <if test="companyId!=null"> and company_id = #{companyId}</if>
      <if test="phone!=null"> and phone = #{phone}</if>
      <if test="type!=null"> and type = #{type}</if>
      <if test="true"> and status > 0 </if>
    </where>
  </select>

  <select id="selectById" parameterType="Long" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" />
    from
        cc_company_phone where id = #{id} and company_id = #{companyId}
  </select>

  <!-- 通过 -->
  <select id="selectByDisplay" parameterType="Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    cc_company_phone where  id in (select phone_id from cc_company_phone_group where display_id = #{id})
  </select>

</mapper>